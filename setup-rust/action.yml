name: Checkout and setup rust with cache support
description: Bootstrap action to checkout the code, install the rust toolchain and retrieve the Rust dependency cache if any.

inputs:
  cache-key:
    type: string
    description: The cache name as defined in the CI workflow matrix
    required: true
  shared-key:
    type: string
    description: A shared key to use the cache across different jobs (overrides cache-key)
    default: ""
  enable-cache:
    type: bool
    default: true
    description: Whether to enable Rust dependency caching
    required: false
  rust-toolchain:
    type: string
    description: Rust toolchain to install
    required: true

outputs:
  cache-hit:
    description: "A boolean value that indicates an exact match was found."
    value: ${{ steps.caching-step.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: checkout
      uses: actions/checkout@v4
    # --------------------------------------------------------------------------------
    - name: free up space on GitHub runner
      if: runner.os == 'Linux' && runner.environment == 'github-hosted'
      run: |
        : Free up space on Linux Github runner image
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      shell: bash
    # --------------------------------------------------------------------------------
    - name: install dependencies
      # in self-hosted environment we bake the dependencies into the image
      if: runner.os == 'Linux' && runner.environment != 'self-hosted'
      run: |
        : Install dependencies
        sudo apt-get install -y build-essential
      shell: bash
    # --------------------------------------------------------------------------------
    - name: install rust
      uses: dtolnay/rust-toolchain@master
      with:
        components: rustfmt, clippy
        toolchain: ${{ inputs.rust-toolchain }}
    # --------------------------------------------------------------------------------
    - name: caching
      if: inputs.enable-cache == 'true'
      uses: Swatinem/rust-cache@v2
      id: caching-step
      with:
        key: ${{ inputs.cache-key }}
        shared-key: ${{ inputs.shared-key }}
        prefix-key: v11-rust
        cache-on-failure: false
        cache-all-crates: true
